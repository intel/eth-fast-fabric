# BEGIN_ICS_COPYRIGHT8 ****************************************
# 
# Copyright (c) 2015-2017, Intel Corporation
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 
#     * Redistributions of source code must retain the above copyright notice,
#       this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of Intel Corporation nor the names of its contributors
#       may be used to endorse or promote products derived from this software
#       without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# 
# END_ICS_COPYRIGHT8   ****************************************

# [ICS VERSION STRING: unknown]

source "/usr/lib/eth-tools/ff_function.exp"

#=============================================================================#
# Test Suite Description:
#-----------------------------------------------------------------------------#
## mpiperfdeviation
## -------
## quick MPI performance verification between each pair of hosts
#=============================================================================#

# manditory setup
log_user 0;	# disable detailed logging to stdout

# uncomment the following to debug the test
#strace 20
#log_user 1
#exp_internal 1
#cmd_trace on
#strace 4

proc suite_setup {} {
	# example of conditional setup
	#test_execute {load populate} {
		#do some installation or configuration stuff
	#}
}

proc case_setup {} {
# setup to do at start of each test case
# Usage:
#	pass as argument to start_suite
# Arguments:
#	None
# This procedure will be run at the start of every test case
# It provides an opportunity for uniform cleanup/setup for each test case

	#upvar 2 host host

	#host_save_log $host
}

proc case_cleanup { failed } {
# cleanup to do after each test case
# Usage:
#	pass as argument to start_suite
# Arguments:
#	failed - set to 1 if test case failed in which case additional
#		information/files may be desired in test_tmp
#		set to 0 if test case passed
# This procedure will be run at the end of every test case
# It provides an opportunity for uniform cleanup after each test case
	global env

	test_execute {} {
		if { $failed || [ test_save_temp ] } {
			# save any logs/results from system(s) under test
			#upvar host host
			#host_check_log $host "qmpi"
		}
	}
}

test_suite "mpiperfdeviation" "mpi lat/bw deviation" "Quick tests of mpi lat/bw deviation pairs
of hosts
File: /usr/lib/eth-tools/mpiperfdeviation.exp" suite_setup noop {
	global env

	# Global Initializations for Test Suite:
	# --------------------------------------

	# ADD ANY GLOBAL INITIALIZATION HERE, SUCH AS:
	# set env(MY_ENV_VAR) value
	# also validate the environment
	# if the environment is bad call fail_suite "information" abort_now
	# abort_now should be 0 if it is safe to proceed and simply ignore all
	# test_case calls.  it should be 1 if that is not possible.

	# Procedures used to support Test Suite:
	# --------------------------------------

	# The actual test cases:
	# ----------------------

	set full 0
	# compute host_pairs by taking each pair of hosts from CFG_HOSTS
	# 1 to 2, 3 to 4, etc.  Thus each hosts bus speed and Ib connect is
	# verified once
	set host_pairs {}
	set num_hosts [llength $env(CFG_HOSTS)]
	if { $num_hosts < 2 } {
		fail_suite "Need at least 2 hosts for MPI"
	}

	for { set i 0 } { $i < [ expr $num_hosts] } { incr i 1 } {
		set host1 [lindex $env(CFG_HOSTS) $i]
		lappend host_pairs "$host1"
	}

	# prevent build_mpi_hosts/test_case_run_mpi_app from modifying host name
	set env(CFG_IPOIB_SUFFIX) ""

	set mpitype [determine_mpitype "$env(FF_MPI_APPS_DIR)"]

	# figure out ports info
	set first_irdmas ""
	test_case "setup" "mpiperfdeviation test setup" "Prepare for mpiperfdeviation tests File: /usr/lib/eth-tools/mpiperfdeviation.exp" case_setup case_cleanup {
		upvar first_irdmas first_irdmas
		set ret [get_irdmas]
		set first_irdmas [lindex $ret 0]
		if { "$first_irdmas" == "" } {
			fail_test "[lindex $ret 1]"
		}
	}

	foreach port $first_irdmas {
		test_case_run_mpi_app_port $mpitype default localhost $host_pairs $port 0 60 "$env(FF_MPI_APPS_DIR)/deviation" "deviation" "$env(FF_DEVIATION_ARGS)" 1
	}
}
